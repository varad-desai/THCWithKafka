version: '3'

services:
  #service 1: definition of your spring-boot app
  springboot-app:
    image: 'texashamburger:latest'
    container_name: springboot-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    networks:
      - app_network
    depends_on:
      - pgsql-db
      - mongo-db
#      - kafka

  #service 2: definition of pgsql database
  pgsql-db:
    image: 'postgres:latest'
    container_name: pgsql-db
    environment:
      - POSTGRES_USER=varad
      - POSTGRES_PASSWORD=Varad@123
      - POSTGRES_DB=curd_using_spring
    networks:
      - app_network

  #service 3: definition of mongodb
  mongo-db:
    image: 'mongo:latest'
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app_network

#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    networks:
#      - app_network
#
#  kafka:
#    image: wurstmeister/kafka:0.10.2.1
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_CREATE_TOPICS: "thc-topic"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - app_network

networks:
  app_network:
    driver: bridge

